swagger: "2.0"
info:
  description: "Boltie - Mobilszoftver Laborat√≥rium HF"
  version: "0.1.0"
  title: "Boltie"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      nickName:
        type: "string"
        description: "How the ser wants us to call him/her"
      phone:
        type: "string"
      accessKey:
        type: "string"
        description: "A key for the user to access the API"
  Workplace:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
  Role:
    type: "string"
    enum:
    - Manager
    - Seller
    - Loader
    - None # Create a 'None' type to be able to return if the logged in user has no work at the workplace
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      barcode:
        type: "string"
      name:
        type: "string"
      desc:
        type: "string"
      price:
        type: "number"

paths:
  /user/{email}:
    get:
      parameters:
      - name: "email"
        in: "path"
        description: "The email address of the user to return"
        required: true
        type: "string"
      summary: "Returns the User with the given email"
      operationId: "getUserByEmail"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operation Successful"
          schema:
            $ref: "#/definitions/User"
        "404":
          description: "Not Found"
  /user/{userId}/manage:
    # TODO: PUT/POST
    delete:
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the user to return"
        required: true
        type: "integer"
        format: "int64"
      # TODO: Should also request an API key for better safety
      summary: "Deletes the User with the ID of 'userId'"
      operationId: "delUserById"
      responses:
        "204":
          description: "Successfuly deleted User (no response content)"
        "404":
          description: "Could not find User to delete"
  /product/{barcode}/{workplaceId}:
    get:
      parameters:
      - name: "barcode"
        in: "path"
        description: "The barcode of the Product"
        required: true
        type: "string"
      - name: "workplaceId"
        in: "path"
        description: "The ID of current workplace"
        required: true
        type: "string"
      summary: "Returns Product data customized for the Workplace"
      operationId: "getProductByBarcodeAndWorkplace"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operation Successful"
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "Not Found"
  /workplace/{wpId}:
    get:
      parameters:
      - name: "wpId"
        in: "path"
        description: "The ID of the workplace"
        required: true
        type: "string"
      summary: "Returns the Workplace with the ID of 'wpId'"
      operationId: "getWorkplaceById"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operation Successful"
          schema:
            $ref: "#/definitions/Workplace"
        "404":
          description: "Not Found"
  /role/{userId}/{wpId}:
    get:
      parameters:
      - name: "userId"
        in: "path"
        description: "The ID of the User"
        required: true
        type: "integer"
        format: "int64"
      - name: "wpId"
        in: "path"
        description: "The ID of the Workplace"
        required: true
        type: "integer"
        format: "int64"
      summary: "Returns the role of the User with 'userId' at the Workplace 'wpId'"
      operationId: "getRoleByUserAndWorkplaceId"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operation Successful"
          schema:
            $ref: "#/definitions/Role"
        "404":
          description: "User or Workplace not found"
    
